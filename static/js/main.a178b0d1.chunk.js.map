{"version":3,"sources":["Components/ContactItem/Phonebook.module.css","Components/InputForm/PhonebookEditor.module.css","Components/ContactItem/ContactItem.js","redux/phoneBook/phoneBookTypes.js","redux/phoneBook/selectors.js","Components/ContactList/ContactList.js","redux/phoneBook/phoneBookActions.js","Components/InputForm/InputForm.jsx","Components/Filter/Filter.jsx","Components/App.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["module","exports","ContactItem","contact","name","number","onDelete","undefined","className","styles","PhonebookText","type","button","onClick","types","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","getContacts","state","phoneBookReducer","items","getFilter","filter","ContactList","dispatch","useDispatch","contacts","useSelector","filteredContacts","toLowerCase","includes","handleDelete","id","phoneBookTypes","payload","deleteContact","map","toastr","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","InputForm","useState","setName","setNumber","isExists","find","getIsContactExists","PhonebookEditor","onSubmit","e","preventDefault","warning","shortid","generate","value","onChange","target","pattern","title","required","PhonebookEditorButton","Filter","setFilter","placeholder","actions","App","initialState","combineReducers","action","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","reactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.a178b0d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Phonebook_button__3Ks78\",\"PhonebookText\":\"Phonebook_PhonebookText__1GQCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhonebookEditor\":\"PhonebookEditor_PhonebookEditor__22oTt\",\"PhonebookEditorButton\":\"PhonebookEditor_PhonebookEditorButton__1rcqe\"};","import styles from './Phonebook.module.css';\r\n\r\nconst ContactItem = ({ contact: { name, number }, onDelete }) =>\r\n\tname !== undefined && (\r\n\t\t<li>\r\n\t\t\t<p className={styles.PhonebookText}>\r\n\t\t\t\t{name} {number}\r\n\t\t\t\t<button type='button' className={styles.button} onClick={onDelete}>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</p>\r\n\t\t</li>\r\n\t);\r\n\r\nexport default ContactItem;\r\n","const types = {\r\n\tADD_CONTACT: 'ADD_CONTACT',\r\n\tDELETE_CONTACT: 'DELETE_CONTACT',\r\n\tFILTER_CONTACT: 'FILTER_CONTACT',\r\n};\r\n\r\nexport default types;\r\n","export const getContacts = state => state.phoneBookReducer.items;\r\n\r\nexport const getIsContactExists = name => {\r\n\treturn state =>\r\n\t\t!!state.phoneBookReducer.items.find(contact => contact.name === name);\r\n};\r\n\r\nexport const getFilter = state => state.phoneBookReducer.filter;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nimport { deleteContact } from '../../redux/phoneBook/phoneBookActions';\r\nimport { getContacts, getFilter } from '../../redux/phoneBook/selectors';\r\n\r\nconst ContactList = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst contacts = useSelector(getContacts);\r\n\tconst filter = useSelector(getFilter);\r\n\tconst filteredContacts = filter\r\n\t\t? contacts.filter(({ name }) =>\r\n\t\t\t\tname.toLowerCase().includes(filter.toLowerCase())\r\n\t\t  )\r\n\t\t: contacts;\r\n\r\n\tconst handleDelete = id => {\r\n\t\tdispatch(deleteContact(id));\r\n\t};\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{filteredContacts.map(contact => (\r\n\t\t\t\t<ContactItem\r\n\t\t\t\t\tkey={contact.id}\r\n\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\tonDelete={() => handleDelete(contact.id)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ContactList;\r\n","import phoneBookTypes from './phoneBookTypes';\r\n\r\nexport const contactAdd = contact => ({\r\n\ttype: phoneBookTypes.ADD_CONTACT,\r\n\tpayload: contact,\r\n});\r\n\r\nexport const deleteContact = id => ({\r\n\ttype: phoneBookTypes.DELETE_CONTACT,\r\n\tpayload: id,\r\n});\r\n\r\nexport const filterContact = filter => ({\r\n\ttype: phoneBookTypes.FILTER_CONTACT,\r\n\tpayload: filter,\r\n});\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './PhonebookEditor.module.css';\r\nimport * as actions from '../../redux/phoneBook/phoneBookActions';\r\nimport shortid from 'shortid';\r\nimport toastr from 'toastr';\r\nimport { getIsContactExists } from '../../redux/phoneBook/selectors';\r\ntoastr.options = {\r\n\tcloseButton: false,\r\n\tdebug: false,\r\n\tnewestOnTop: false,\r\n\tprogressBar: false,\r\n\tpositionClass: 'toast-top-right',\r\n\tpreventDuplicates: false,\r\n\tonclick: null,\r\n\tshowDuration: '300',\r\n\thideDuration: '1000',\r\n\ttimeOut: '5000',\r\n\textendedTimeOut: '1000',\r\n\tshowEasing: 'swing',\r\n\thideEasing: 'linear',\r\n\tshowMethod: 'fadeIn',\r\n\thideMethod: 'fadeOut',\r\n};\r\n\r\nconst InputForm = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [name, setName] = useState('');\r\n\tconst [number, setNumber] = useState('');\r\n\tconst isExists = useSelector(getIsContactExists(name));\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tif (isExists) {\r\n\t\t\ttoastr.warning(`Contact ${name} is already exists`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdispatch(\r\n\t\t\tactions.contactAdd({\r\n\t\t\t\tid: shortid.generate(),\r\n\t\t\t\tname,\r\n\t\t\t\tnumber,\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetName('');\r\n\t\tsetNumber('');\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className={styles.PhonebookEditor} onSubmit={handleSubmit}>\r\n\t\t\t\t<h2>Name</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='name'\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>Number</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='tel'\r\n\t\t\t\t\tname='number'\r\n\t\t\t\t\tvalue={number}\r\n\t\t\t\t\tonChange={e => setNumber(e.target.value)}\r\n\t\t\t\t\tpattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n\t\t\t\t\ttitle='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<button className={styles.PhonebookEditorButton} type='submit'>\r\n\t\t\t\t\tAdd contact\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../redux/phoneBook/phoneBookActions';\r\n\r\nconst Filter = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [filter, setFilter] = useState('');\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetFilter(e.target.value);\r\n\t\tdispatch(actions.filterContact(e.target.value));\r\n\t};\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\t//\t\tdispatch(actions.filterContact(filter));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<input\r\n\t\t\ttype='text'\r\n\t\t\tplaceholder='Type to filter contacts'\r\n\t\t\tvalue={filter}\r\n\t\t\tonChange={handleChange}\r\n\t\t></input>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport ContactList from './ContactList/ContactList';\r\nimport InputForm from './InputForm/InputForm';\r\nimport Filter from './Filter/Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst App = () => (\r\n\t<div>\r\n\t\t<h1>Phonebook</h1>\r\n\t\t<InputForm />\r\n\t\t<Filter />\r\n\t\t<ContactList />\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n","import phoneBookTypes from './phoneBookTypes';\r\nimport { combineReducers } from 'redux';\r\nconst initialState = {\r\n\titems: [\r\n\t\t{ id: 1, name: 'Bobby', number: '12345' },\r\n\t\t{ id: 2, name: 'Peter', number: '45343' },\r\n\t\t{ id: 3, name: 'John', number: '78778' },\r\n\t],\r\n\tfilter: '',\r\n};\r\n\r\nconst items = (state = initialState.items, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase phoneBookTypes.ADD_CONTACT:\r\n\t\t\treturn [...state, action.payload];\r\n\r\n\t\tcase phoneBookTypes.DELETE_CONTACT:\r\n\t\t\treturn state.filter(contact => contact.id !== action.payload);\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst filter = (state = initialState.filter, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase phoneBookTypes.FILTER_CONTACT:\r\n\t\t\treturn action.payload;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { createStore, combineReducers } from 'redux';\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\nexport default createStore(\r\n\tcombineReducers({\r\n\t\tphoneBookReducer,\r\n\t}),\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import reactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nreactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}